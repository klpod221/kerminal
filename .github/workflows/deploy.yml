name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: choco install python visualstudio2022-workload-vctools -y

      - name: Install Python dependencies
        if: matrix.os != 'windows-latest'
        run: python3 -m pip install --break-system-packages setuptools

      - name: Install AppImage dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libfuse2 squashfs-tools patchelf

      - name: Install dependencies
        run: npm install

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          npm run build
          npx --no-install electron-builder --mac

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run build
          npx --no-install electron-builder --linux

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: |
          npm run build
          npx --no-install electron-builder --win

      - name: Build and Publish
        run: |
          npm run build
          npx --no-install electron-builder --publish always
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Finalize Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false

  aur-publish:
    name: Publish to AUR
    runs-on: ubuntu-latest
    needs: release
    container:
      image: archlinux:latest
    steps:
      - name: Install Dependencies and Create User
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git openssh base-devel pacman-contrib sudo
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          git config --global core.sshCommand "ssh -i ~/.ssh/aur -o StrictHostKeyChecking=no"

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Clone AUR Repository
        run: git clone ssh://aur@aur.archlinux.org/kerminal.git /tmp/aur-repo

      - name: Change Repo Ownership
        run: chown -R builder:builder /tmp/aur-repo

      - name: Update PKGBUILD as non-root user
        run: |
          sudo -u builder bash -c '
            cd /tmp/aur-repo
            VERSION=${{ github.ref_name }}
            CLEAN_VERSION=${VERSION#v}
            sed -i "s/^pkgver=.*/pkgver=$CLEAN_VERSION/" PKGBUILD
            updpkgsums
          '

      - name: Update .SRCINFO as non-root user
        run: |
          sudo -u builder bash -c '
            cd /tmp/aur-repo
            makepkg --printsrcinfo > .SRCINFO
          '

      - name: Commit and Push to AUR
        run: |
          cd /tmp/aur-repo
          git config --global --add safe.directory /tmp/aur-repo
          if ! git diff-index --quiet HEAD; then
            git add PKGBUILD .SRCINFO
            git commit -m "Update to version ${{ github.ref_name }}"
            git push
          else
            echo "No changes to commit."
          fi
